FROM python:3.11-slim-buster

ARG DEBIAN_FRONTEND=noninteractive
ENV PYTHONUNBUFFERED=1 \
    PATH=/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin \
    LANG=C.UTF-8 \
    SHELL=/bin/bash
ENV MXNET_VERSION 1.9.1
ENV TF_VERSION 2.12.0
ENV TF_HUB 0.13.0
ENV TORCH_VERSION 2.0.1
ENV TORCHVISION_VERSION 0.15.2

ENV JUPYTER_ENABLE_LAB=TRUE

USER root

RUN apt-get update && \
    apt-get install -yq --no-install-recommends \
        build-essential \
        ca-certificates curl \
        gcc g++ git git-core \
        libgeos-dev libgeos++-dev libglib2.0-0 libgl1-mesa-glx libmpdec2 libproj-dev libsndfile1 libssl-dev \
        mime-support \
        openssh-server \
        proj-bin \
        sudo \
        vim jq tmux \
        unzip zip \
        wget && \
    apt-get clean && \
    rm -rf /var/lib/apt/lists/*

# Install pypi data science related dependencies
COPY requirements.datascience.txt requirements.txt
RUN pip install -U pip && \
    pip install --no-cache-dir -r requirements.txt && \
    rm -rf /root/.cache && \
    rm -f /tmp/*.whl && \
    rm -f requirements.txt


RUN pip install --upgrade pip

# Install CLI
RUN pip install --no-cache-dir vessl

RUN pip install --no-cache-dir \
    mxnet==$MXNET_VERSION \
    tensorflow-cpu==$TF_VERSION \
    tensorboard \
    torch==${TORCH_VERSION}+cpu \
    torchvision==${TORCHVISION_VERSION}+cpu \
    keras keras_applications keras_preprocessing \
    tensorflow-hub==$TF_HUB tf2onnx \
    --extra-index-url https://download.pytorch.org/whl/cpu && \
    rm -rf /root/.cache && \
    rm -f /tmp/*.whl

# Install nodejs
RUN curl -sL https://deb.nodesource.com/setup_18.x | bash - && \
    apt-get install -y nodejs && \
    rm -rf /var/lib/apt/lists/*

# Install Jupyter prerequisite packages
COPY requirements.prereq.jupyter.txt requirements.txt
RUN pip install --no-cache-dir -r requirements.txt && \
    rm -rf /root/.cache && \
    rm -f /tmp/*.whl && \
    rm -f requirements.txt

# Install Jupyter requirements
COPY requirements.jupyter.txt requirements.txt
RUN pip install --no-cache-dir -r requirements.txt && \
    rm -rf /root/.cache && \
    rm -f /tmp/*.whl && \
    rm -f requirements.txt

# Jupyterlab extension install
RUN jupyter serverextension enable --py jupyterlab --sys-prefix

RUN jupyter labextension install --no-build @jupyterlab/git && \
    jupyter lab build --dev-build=False --minimize=False

# Install ipython kernelspec
RUN python -m ipykernel install --display-name "Full on Python 3.11 (CPU-only)" && \
    cat /usr/local/share/jupyter/kernels/python3/kernel.json

COPY start-notebook.sh /usr/local/bin/
CMD ["start-notebook.sh"]
