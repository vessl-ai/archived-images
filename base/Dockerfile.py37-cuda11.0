FROM nvidia/cuda:11.0.3-cudnn8-devel-ubuntu18.04

ENV LANG=C.UTF-8
ARG CUDA=11.0
ARG LIBNVINFER=7.2.0-1
ARG LIBNVINFER_MAJOR_VERSION=7
ARG CUDNN=8.0.3.33-1
ENV CUDNN_VERSION=8.0.3.33
ENV NCCL_VERSION=2.7.8-1+cuda$CUDA
ENV DEBIAN_FRONTEND=noninteractive
ENV PYTHON_VERSION=3.7
ENV PYTHONUNBUFFERED=1 \
    LD_LIBRARY_PATH="/usr/local/cuda/extras/CUPTI/lib64:/usr/local/cuda/lib64:/usr/local/nvidia/lib64:/usr/include/x86_64-linux-gnu" \
    PATH="/usr/local/nvidia/bin:/usr/local/cuda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/local/bin/mecab" \
    PYTHONPATH="/usr/local/lib/python3.7/dist-packages:/usr/local/lib/python3.6/dist-packages:${PYTHONPATH}"

SHELL ["/bin/bash", "-cu"]

USER root

RUN apt-get update -y && \
    apt-get install -y --no-install-recommends software-properties-common && \
    apt-get install -y --no-install-recommends apt-utils && \
    apt-get install -y --no-install-recommends libgl1-mesa-glx && \
    add-apt-repository -y "deb http://security.ubuntu.com/ubuntu xenial-security main" && \
    apt-get update -y && \
    apt-get install -y --allow-downgrades --allow-change-held-packages --no-install-recommends \
        build-essential \
        ca-certificates \
        openssh-server \
        wget curl git git-core \
        vim zip unzip \
        python$PYTHON_VERSION python$PYTHON_VERSION-dev python3-pip \
        libexpat1 libbz2-dev libffi6 libsqlite3-0 liblzma5 zlib1g \
    iputils-ping \
        cuda-command-line-tools-${CUDA/./-} \
        cuda-nvrtc-${CUDA/./-} \
        cuda-nvrtc-dev-${CUDA/./-} \
        cuda-cudart-dev-${CUDA/./-} \
        libnccl2=$NCCL_VERSION \
        libnccl-dev=$NCCL_VERSION \
        libcurl3-dev \
        libcurl3-dev \
        libfreetype6-dev \
        libhdf5-serial-dev \
        libzmq3-dev \
        libjpeg-dev \
        libpng-dev \
    libsm6 \
    libxext6 \
    libxrender-dev \
    libcairo2-dev libgirepository1.0-dev pkg-config gir1.2-gtk-3.0 \
        libgeos-dev libgeos++-dev \
        pkg-config \
        zlib1g-dev \
    libmpdec2 \
        libssl1.0.0 \
    libssl-dev \
        libncursesw5 libtinfo5 \
    proj-bin \
        libgeos-dev \
        mime-support \
        sudo \
    gcc g++ \
        libproj-dev libgeos-dev \
        libzmq3-dev libuv1 && \
    apt-get clean && \
    find /usr/local/cuda-${CUDA}/lib64/ -type f -name 'lib*_static.a' -not -name 'libcudart_static.a' -delete && \
    rm /usr/lib/x86_64-linux-gnu/libcudnn_static_v8.a && \
    rm -rf /var/lib/apt/lists/

RUN ln -s /usr/local/cuda/lib64/stubs/libcuda.so /usr/local/cuda/lib64/stubs/libcuda.so.1 \
    && echo "/usr/local/cuda/lib64/stubs" > /etc/ld.so.conf.d/z-cuda-stubs.conf \
    && ldconfig

RUN curl https://bootstrap.pypa.io/get-pip.py | python3 && \
    pip install --upgrade pip && \
    pip install -U setuptools

RUN update-alternatives --install /usr/bin/python python /usr/bin/python$PYTHON_VERSION 2

# Install pypi data science related dependencies
COPY requirements.datascience.txt requirements.txt
RUN python -m pip install --no-cache-dir -r requirements.txt && \
    rm -rf /root/.cache && \
    rm -f /tmp/*.whl && \
    rm -f requirements.txt

RUN export LD_LIBRARY_PATH=/usr/local/ssl/lib:$LD_LIBRARY_PATH
RUN ln -s /usr/local/cuda-$CUDA /usr/local/cuda && \
    ln -s /usr/lib/x86_64-linux-gnu/libcudnn.so.8.0.3 /usr/local/cuda/lib64/libcudnn.so && \
    ldconfig

RUN apt-get update && \
    apt-get install -y --no-install-recommends \
    libnvinfer${LIBNVINFER_MAJOR_VERSION}=$LIBNVINFER+cuda$CUDA \
    libnvinfer-dev=${LIBNVINFER}+cuda${CUDA}  \
    libnvinfer-plugin7=${LIBNVINFER}+cuda${CUDA} && \
    apt-get clean && \
    rm -rf /var/lib/apt/lists/*

LABEL com.nvidia.cuda.version="11.0" \
      com.nvidia.volumes.needed="nvidia_driver"
