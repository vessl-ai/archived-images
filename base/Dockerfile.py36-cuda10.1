FROM nvidia/cuda:10.1-cudnn7-devel-ubuntu18.04

MAINTAINER floyd@savvihub.com

ARG NB_USER="savvi"
ENV JUPYTER_ENABLE_LAB=TRUE
ENV LANG=C.UTF-8

ARG CUDA=10.1
ARG LIBNVINFER=6.0.1-1
ARG LIBNVINFER_MAJOR_VERSION=6
ARG CUDNN=7.6.5.32-1
ENV CUBLAS_VERSION=10.2.1.243-1
ENV CUDNN_VERSION=$CUDNN+cuda$CUDA
ENV NCCL_VERSION=2.6.4-1+cuda$CUDA
ENV DEBIAN_FRONTEND=noninteractive
ENV PYTHON_VERSION=3.6
ENV PYTHONUNBUFFERED=1 \
    LD_LIBRARY_PATH="/usr/local/cuda/extras/CUPTI/lib64:/usr/local/cuda/lib64:/usr/local/nvidia/lib64:/usr/include/x86_64-linux-gnu" \
    PATH="/usr/local/nvidia/bin:/usr/local/cuda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/local/bin/mecab"

SHELL ["/bin/bash", "-cu"]

RUN apt-get update -y && \
    apt-get install -y --no-install-recommends software-properties-common && \
    add-apt-repository -y "deb http://security.ubuntu.com/ubuntu xenial-security main" && \
    apt-get update -y && \
    apt-get install -y --allow-downgrades --allow-change-held-packages --no-install-recommends \
        build-essential \
        ca-certificates \
        wget curl git git-core\
        vim-tiny zip unzip \
        python$PYTHON_VERSION python$PYTHON_VERSION-dev python3-pip \
        libexpat1 libbz2-dev libffi6 libsqlite3-0 liblzma5 zlib1g \
    iputils-ping \
        cuda-command-line-tools-${CUDA/./-} \
        libcublas10=$CUBLAS_VERSION\
        libcublas-dev=$CUBLAS_VERSION \
        cuda-nvrtc-${CUDA/./-} \
        cuda-nvrtc-dev-${CUDA/./-} \
        cuda-cudart-dev-${CUDA/./-} \
        cuda-cufft-dev-${CUDA/./-} \
        cuda-curand-dev-${CUDA/./-} \
        cuda-cusolver-dev-${CUDA/./-} \
        cuda-cusparse-dev-${CUDA/./-} \
        libcudnn7=${CUDNN}+cuda${CUDA} \
    libcudnn7=$CUDNN_VERSION \
        libcudnn7-dev=$CUDNN_VERSION \
        libnccl2=$NCCL_VERSION \
        libnccl-dev=$NCCL_VERSION \
        libcurl3-dev \
        libcurl3-dev \
        libfreetype6-dev \
        libhdf5-serial-dev \
        libzmq3-dev \
        libjpeg-dev \
        libpng-dev \
    libsm6 \
	libxext6 \
	libxrender-dev \
	libcairo2-dev libgirepository1.0-dev pkg-config gir1.2-gtk-3.0 \
        libgeos-dev libgeos++-dev \
        pkg-config \
        zlib1g-dev \
	libmpdec2 \
        libssl1.0.0 \
	libssl-dev \
        libncursesw5 libtinfo5 \
	proj-bin \
        libgeos-dev \
        mime-support \
        sudo \
	gcc g++ \
        libproj-dev libgeos-dev \
        libzmq3-dev libuv1 && \
    apt-get clean && \
    find /usr/local/cuda-${CUDA}/lib64/ -type f -name 'lib*_static.a' -not -name 'libcudart_static.a' -delete && \
    rm /usr/lib/x86_64-linux-gnu/libcudnn_static_v7.a && \
    rm -rf /var/lib/apt/lists/

RUN ln -s /usr/local/cuda/lib64/stubs/libcuda.so /usr/local/cuda/lib64/stubs/libcuda.so.1 \
    && echo "/usr/local/cuda/lib64/stubs" > /etc/ld.so.conf.d/z-cuda-stubs.conf \
    && ldconfig

RUN curl -sL https://deb.nodesource.com/setup_12.x | bash - && \
  	apt-get install -y nodejs  && \
  	rm -rf /var/lib/apt/lists/*

RUN curl https://bootstrap.pypa.io/get-pip.py | python3 && \
  	pip install --upgrade pip && \
  	pip install -U setuptools && \
  	pip install --upgrade Cython numpy

RUN pip install --upgrade \
		jupyterlab==1.2.6 \
		ipywidgets \
		plotly \
		bokeh \
		scipy \
		numexpr \
		patsy \
		scikit-learn \
		scikit-image \
		matplotlib \
		ipython \
		pandas \
		sympy \
		seaborn \
		nose \
		jupyterlab-git==0.11.0 \
		Cartopy==0.16 \
		cvxpy \
		h5py \
		ipywidgets \
		networkx \
		numexpr \
		pillow \
		pygments \
		tqdm && \
  	jupyter labextension install \
		@jupyterlab/git \
		jupyterlab_tensorboard \
	    @mflevine/jupyterlab_html \
		jupyterlab-spreadsheet && \
	rm -rf /root/.cache && \
	rm -f /tmp/*.whl

RUN nbdime extensions --disable
RUN npm i @jupyterlab/toc
RUN jupyter lab build --minimize=False

RUN update-alternatives --install /usr/bin/python python /usr/bin/python3 2

RUN export LD_LIBRARY_PATH=/usr/local/ssl/lib:$LD_LIBRARY_PATH

# Install CUDA-10.1 + cuDNN 7.6.0
RUN ln -s /usr/local/cuda-$CUDA /usr/local/cuda && \
    ln -s /usr/lib/x86_64-linux-gnu/libcudnn.so.7.6.0 /usr/local/cuda/lib64/libcudnn.so && \
    ldconfig

RUN apt-get update && \
    apt-get install -y --no-install-recommends \
    libnvinfer${LIBNVINFER_MAJOR_VERSION}=$LIBNVINFER+cuda$CUDA \
    libnvinfer-dev=${LIBNVINFER}+cuda${CUDA}  \
    libnvinfer-plugin6=${LIBNVINFER}+cuda${CUDA} && \
    apt-get clean && \
    rm -rf /var/lib/apt/lists/*

RUN curl -sL https://deb.nodesource.com/setup_10.x | bash - && \
    apt-get update -y && \
    apt-get install -y proj-bin libproj-dev libgeos-dev libgeos++-dev graphviz

LABEL com.nvidia.cuda.version="10.1" \
      com.nvidia.volumes.needed="nvidia_driver"

COPY start-notebook.sh /usr/local/bin/
COPY config/ /root/.jupyter/
