FROM nvidia/cuda:11.2.2-cudnn8-devel-ubuntu18.04

ENV LANG=C.UTF-8
ENV DEBIAN_FRONTEND=noninteractive
ENV PYTHON_VERSION=3.6.14
ENV PYTHONUNBUFFERED=1 \
    LD_LIBRARY_PATH="/usr/local/ssl/lib:/usr/local/cuda/extras/CUPTI/lib64:/usr/local/cuda/lib64:/usr/local/nvidia/lib64:/usr/include/x86_64-linux-gnu" \
    PATH="/usr/local/nvidia/bin:/usr/local/cuda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/local/bin/mecab"

SHELL ["/bin/bash", "-cu"]

USER root

RUN apt-get update && \
    apt-get install -y --no-install-recommends software-properties-common && \
    apt-get install -y --no-install-recommends apt-utils && \
    apt-get install -y --no-install-recommends libgl1-mesa-glx && \
    add-apt-repository -y "deb http://security.ubuntu.com/ubuntu bionic-security main" && \
    apt-get update && \
    apt-get install -y --allow-downgrades --allow-change-held-packages --no-install-recommends \
        build-essential \
        ca-certificates \
        wget curl git git-core \
        vim zip unzip jq tmux \
        openssh-server \
        libexpat1 libbz2-dev libffi6 libsqlite3-dev libsndfile1 liblzma5 liblzma-dev zlib1g zlib1g-dev \
        iputils-ping \
        libcurl3-dev \
        libfreetype6-dev \
        libhdf5-serial-dev \
        libjpeg-dev \
        libpng-dev \
        libsm6 \
        libxext6 \
        libxrender-dev \
        libcairo2-dev libgirepository1.0-dev pkg-config gir1.2-gtk-3.0 \
        pkg-config \
        libmpdec2 \
        libssl1.0.0 \
        libssl-dev \
        libncurses5-dev libncursesw5-dev libtinfo5 \
        libreadline-dev \
        proj-bin \
        mime-support \
        sudo \
        gcc g++ \
        libproj-dev libgeos-dev libgeos++-dev \
        libzmq3-dev libuv1 && \
    apt-get clean && \
    rm -rf /var/lib/apt/lists/*

RUN wget https://www.python.org/ftp/python/$PYTHON_VERSION/Python-$PYTHON_VERSION.tgz
RUN tar -xvf Python-$PYTHON_VERSION.tgz
RUN /bin/bash -c "cd Python-$PYTHON_VERSION/; ./configure; make install"
RUN rm -rf Python-$PYTHON_VERSION*

RUN update-alternatives --install /usr/bin/python python $(which python3) 2

RUN curl https://bootstrap.pypa.io/get-pip.py | python && \
    pip install -U pip && \
    pip install -U setuptools

# Install pypi data science related dependencies
COPY requirements.datascience.txt requirements.txt
RUN pip install --no-cache-dir -r requirements.txt && \
    rm -rf /root/.cache && \
    rm -f /tmp/*.whl && \
    rm -f requirements.txt

LABEL com.nvidia.cuda.version="11.2" \
      com.nvidia.volumes.needed="nvidia_driver"
